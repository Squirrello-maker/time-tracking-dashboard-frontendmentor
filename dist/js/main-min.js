"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function _createClass(t,e,n){return e&&_defineProperties(t.prototype,e),n&&_defineProperties(t,n),t}var ActivityHandler=function(){function t(){_classCallCheck(this,t),this.hours=document.querySelectorAll(".card__content__hours-box"),this.previousTime=document.querySelectorAll(".card__content__previous-stat")}return _createClass(t,[{key:"dailyActivity",value:function(){var r=this;fetch("https://raw.githubusercontent.com/Squirrello-maker/time-tracking-dashboard-frontendmentor/main/src/JSON/data.json").then(function(t){return t.json()}).then(function(n){console.log(n[1]),r.hours.forEach(function(t,e){r.hours[e].textContent="".concat(n[e].timeframes.daily.current,"hrs"),r.previousTime[e].textContent="Last Daily - ".concat(n[e].timeframes.daily.previous,"hrs")})})}},{key:"weeklyActivity",value:function(){var r=this;fetch("https://raw.githubusercontent.com/Squirrello-maker/time-tracking-dashboard-frontendmentor/main/src/JSON/data.json").then(function(t){return t.json()}).then(function(n){r.hours.forEach(function(t,e){r.hours[e].textContent="".concat(n[e].timeframes.weekly.current,"hrs"),r.previousTime[e].textContent="Last Weekly - ".concat(n[e].timeframes.weekly.previous,"hrs")})})}},{key:"monthlyActivity",value:function(){var r=this;fetch("https://raw.githubusercontent.com/Squirrello-maker/time-tracking-dashboard-frontendmentor/main/src/JSON/data.json").then(function(t){return t.json()}).then(function(n){r.hours.forEach(function(t,e){r.hours[e].textContent="".concat(n[e].timeframes.monthly.current,"hrs"),r.previousTime[e].textContent="Last Monthly - ".concat(n[e].timeframes.monthly.previous,"hrs")})})}},{key:"addFnsToArr",value:function(){this.funsArr=[this.dailyActivity,this.weeklyActivity,this.monthlyActivity]}}]),t}(),DOMHandler=function(){function t(){_classCallCheck(this,t)}return _createClass(t,null,[{key:"getBtns",value:function(){return document.querySelectorAll(".report-button")}},{key:"addEventListeners",value:function(t,n,r){t.forEach(function(t,e){t.addEventListener("click",n[e].bind(r))})}}]),t}(),App=function(){function t(){_classCallCheck(this,t)}return _createClass(t,null,[{key:"init",value:function(){var t=new ActivityHandler;t.addFnsToArr(),DOMHandler.addEventListeners(DOMHandler.getBtns(),t.funsArr,t)}}]),t}();App.init();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiQWN0aXZpdHlIYW5kbGVyIiwiX2NsYXNzQ2FsbENoZWNrIiwidGhpcyIsImhvdXJzIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwicHJldmlvdXNUaW1lIiwiZmV0Y2giLCJ0aGVuIiwicmVzIiwianNvbiIsImRhdGEiLCJmb3JFYWNoIiwiZWxlbWVudCIsIl90aGlzIiwiaW5kZXgiLCJ0ZXh0Q29udGVudCIsImNvbmNhdCIsInRpbWVmcmFtZXMiLCJkYWlseSIsImN1cnJlbnQiLCJwcmV2aW91cyIsIl90aGlzMiIsImNvbnNvbGUiLCJsb2ciLCJ3ZWVrbHkiLCJfdGhpczMiLCJtb250aGx5IiwiZnVuc0FyciIsImRhaWx5QWN0aXZpdHkiLCJ3ZWVrbHlBY3Rpdml0eSIsIm1vbnRobHlBY3Rpdml0eSIsIkRPTUhhbmRsZXIiLCJidG5zIiwiZnVucyIsIm9iaiIsImJ0biIsImFkZEV2ZW50TGlzdGVuZXIiLCJiaW5kIiwiQXBwIiwiYWN0aXZpdHkiLCJhZGRGbnNUb0FyciIsImFkZEV2ZW50TGlzdGVuZXJzIiwiZ2V0QnRucyIsImluaXQiXSwibWFwcGluZ3MiOiJ1WkFBTUEsZ0IsV0FFRixTQUFBQSxJQUNBQyxnQkFBQUMsS0FBQUYsR0FDSUUsS0FBS0MsTUFBUUMsU0FBU0MsaUJBQWlCLDZCQUN2Q0gsS0FBS0ksYUFBZUYsU0FBU0MsaUJBQWlCLGlDLGtEQUVsRCxXQVBFTCxJQUFBQSxFQUFBQSxLQUVGTyxNQUFBLHFIQUNBQyxLQUFBLFNBQUFDLEdBQUEsT0FBQUEsRUFBQUMsU0FRS0YsS0FBSyxTQUFBRyxHQVBEUixRQUFRQyxJQUFBQSxFQUFTQyxJQUNqQkMsRUFBQUEsTUFBTE0sUUFBb0JSLFNBQVFTLEVBQUNSLEdBQ2hDUyxFQUFBWCxNQUFBWSxHQUFBQyxZQUFBLEdBQUFDLE9BQUFOLEVBQUFJLEdBQUFHLFdBQUFDLE1BQUFDLFFBQUEsT0FTV04sRUFBS1IsYUFBYVMsR0FBT0MsWUFBekIsZ0JBQUFDLE9BQXVETixFQUFLSSxHQUFPRyxXQUFXQyxNQUFNRSxTQUFwRixhLDRCQVBaLFdBWUEsSUFBQUMsRUFBQXBCLEtBWElLLE1BQU0scUhBQ0dDLEtBQUEsU0FBQUMsR0FBSUEsT0FBSUMsRUFBUkEsU0FDUkYsS0FBSyxTQUFBRyxHQUNGWSxFQUFRQyxNQUFJYixRQUFaLFNBQUFFLEVBQUFFLEdBYUlPLEVBQUtuQixNQUFNWSxHQUFPQyxZQUFsQixHQUFBQyxPQUFtQ04sRUFBS0ksR0FBT0csV0FBV08sT0FBT0wsUUFBakUsT0FaQ2pCLEVBQU1TLGFBQVFHLEdBQUNGLFlBQWZWLGlCQUFBQSxPQUFrQ1EsRUFBQUksR0FBQUcsV0FBQU8sT0FBQUosU0FBbENsQixhLDZCQUlSLFdBQ0osSUFBQXVCLEVBQUF4QixLQWNHSyxNQUFNLHFIQUNMQyxLQUFLLFNBQUFDLEdBQUcsT0FBSUEsRUFBSUMsU0FDaEJGLEtBZkwsU0FBQUcsR0FDQWUsRUFBQXZCLE1BQUFTLFFBQUEsU0FBQUMsRUFBQUUsR0FnQllXLEVBQUt2QixNQUFNWSxHQUFPQyxZQUFsQixHQUFBQyxPQUFtQ04sRUFBS0ksR0FBT0csV0FBV1MsUUFBUVAsUUFBbEUsT0FmRk0sRUFBQXBCLGFBQUFTLEdBQUFDLFlBQUEsa0JBQUFDLE9BQUFOLEVBQUFJLEdBQUFHLFdBQUFTLFFBQUFOLFNBQUEsYSx5QkFJRSxXQUVIbkIsS0FIRDBCLFFBQUEsQ0FBQTFCLEtBQUEyQixjQUFBM0IsS0FBQTRCLGVBQUE1QixLQUFBNkIscUIsS0FzQk5DLFcsaUdBRUYsV0FoQkl6QixPQWtCdUJILFNBQVNDLGlCQUFpQixvQiwrQkFqQnhDLFNBQ0M0QixFQUFHQyxFQUFBQyxHQUVMRixFQUFBckIsUUFBS1QsU0FBTGlDLEVBQVdyQixHQUNYcUIsRUFBSUMsaUJBQWN0QixRQUFPQyxFQUFBQSxHQUF6QnNCLEtBQUFILFUsS0F5QlZJLEksOEZBbEJELFdBc0JFLElBQU1DLEVBQVcsSUFBSXhDLGdCQUNyQndDLEVBQVNDLGNBQ1RULFdBQVdVLGtCQUFrQlYsV0FBV1csVUFBV0gsRUFBU1osUUFBU1ksTyxLQUk1RUQsSUFBSUsiLCJmaWxlIjoibWFpbi1taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBY3Rpdml0eUhhbmRsZXJcclxue1xyXG4gICAgY29uc3RydWN0b3IoKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuaG91cnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2FyZF9fY29udGVudF9faG91cnMtYm94Jyk7XHJcbiAgICAgICAgdGhpcy5wcmV2aW91c1RpbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuY2FyZF9fY29udGVudF9fcHJldmlvdXMtc3RhdCcpO1xyXG4gICAgfVxyXG4gICAgZGFpbHlBY3Rpdml0eSgpXHJcbiAgICB7XHJcbiAgICAgICAgZmV0Y2goJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9TcXVpcnJlbGxvLW1ha2VyL3RpbWUtdHJhY2tpbmctZGFzaGJvYXJkLWZyb250ZW5kbWVudG9yL21haW4vc3JjL0pTT04vZGF0YS5qc29uJylcclxuICAgICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcclxuICAgICAgICAudGhlbihkYXRhID0+e1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhWzFdKTtcclxuICAgICAgICAgICAgdGhpcy5ob3Vycy5mb3JFYWNoKChlbGVtZW50LCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ob3Vyc1tpbmRleF0udGV4dENvbnRlbnQgPSBgJHtkYXRhW2luZGV4XS50aW1lZnJhbWVzLmRhaWx5LmN1cnJlbnR9aHJzYDtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJldmlvdXNUaW1lW2luZGV4XS50ZXh0Q29udGVudCA9IGBMYXN0IERhaWx5IC0gJHtkYXRhW2luZGV4XS50aW1lZnJhbWVzLmRhaWx5LnByZXZpb3VzfWhyc2A7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgd2Vla2x5QWN0aXZpdHkoKVxyXG4gICAge1xyXG4gICAgICAgIGZldGNoKCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vU3F1aXJyZWxsby1tYWtlci90aW1lLXRyYWNraW5nLWRhc2hib2FyZC1mcm9udGVuZG1lbnRvci9tYWluL3NyYy9KU09OL2RhdGEuanNvbicpXHJcbiAgICAgICAgLnRoZW4ocmVzID0+IHJlcy5qc29uKCkpXHJcbiAgICAgICAgLnRoZW4oZGF0YSA9PntcclxuICAgICAgICAgICAgdGhpcy5ob3Vycy5mb3JFYWNoKChlbGVtZW50LCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5ob3Vyc1tpbmRleF0udGV4dENvbnRlbnQgPSBgJHtkYXRhW2luZGV4XS50aW1lZnJhbWVzLndlZWtseS5jdXJyZW50fWhyc2A7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByZXZpb3VzVGltZVtpbmRleF0udGV4dENvbnRlbnQgPSBgTGFzdCBXZWVrbHkgLSAke2RhdGFbaW5kZXhdLnRpbWVmcmFtZXMud2Vla2x5LnByZXZpb3VzfWhyc2A7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgbW9udGhseUFjdGl2aXR5KClcclxuICAgIHtcclxuICAgICAgICBmZXRjaCgnaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL1NxdWlycmVsbG8tbWFrZXIvdGltZS10cmFja2luZy1kYXNoYm9hcmQtZnJvbnRlbmRtZW50b3IvbWFpbi9zcmMvSlNPTi9kYXRhLmpzb24nKVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT57XHJcbiAgICAgICAgICAgIHRoaXMuaG91cnMuZm9yRWFjaCgoZWxlbWVudCwgaW5kZXgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuaG91cnNbaW5kZXhdLnRleHRDb250ZW50ID0gYCR7ZGF0YVtpbmRleF0udGltZWZyYW1lcy5tb250aGx5LmN1cnJlbnR9aHJzYDtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJldmlvdXNUaW1lW2luZGV4XS50ZXh0Q29udGVudCA9IGBMYXN0IE1vbnRobHkgLSAke2RhdGFbaW5kZXhdLnRpbWVmcmFtZXMubW9udGhseS5wcmV2aW91c31ocnNgO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuICAgIGFkZEZuc1RvQXJyKClcclxuICAgIHtcclxuICAgICAgICB0aGlzLmZ1bnNBcnIgPSBbdGhpcy5kYWlseUFjdGl2aXR5LCB0aGlzLndlZWtseUFjdGl2aXR5LCB0aGlzLm1vbnRobHlBY3Rpdml0eV07XHJcbiAgICB9XHJcbn1cclxuY2xhc3MgRE9NSGFuZGxlclxyXG57XHJcbiAgICBzdGF0aWMgZ2V0QnRucygpXHJcbiAgICB7XHJcbiAgICAgICAgY29uc3Qgc29ydGluZ0J1dHRvbnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucmVwb3J0LWJ1dHRvbicpO1xyXG4gICAgICAgIHJldHVybiBzb3J0aW5nQnV0dG9ucztcclxuICAgIH1cclxuICAgIHN0YXRpYyBhZGRFdmVudExpc3RlbmVycyhidG5zLCBmdW5zLCBvYmopXHJcbiAgICB7XHJcbiAgICAgICAgYnRucy5mb3JFYWNoKChidG4sIGkpID0+e1xyXG4gICAgICAgICAgICBidG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5zW2ldLmJpbmQob2JqKSk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgfVxyXG59XHJcblxyXG5jbGFzcyBBcHBcclxue1xyXG4gICAgc3RhdGljIGluaXQoKVxyXG4gICAge1xyXG4gICAgICAgY29uc3QgYWN0aXZpdHkgPSBuZXcgQWN0aXZpdHlIYW5kbGVyKCk7XHJcbiAgICAgICBhY3Rpdml0eS5hZGRGbnNUb0FycigpO1xyXG4gICAgICAgRE9NSGFuZGxlci5hZGRFdmVudExpc3RlbmVycyhET01IYW5kbGVyLmdldEJ0bnMoKSwgYWN0aXZpdHkuZnVuc0FyciwgYWN0aXZpdHkpO1xyXG5cclxuICAgIH1cclxufVxyXG5BcHAuaW5pdCgpOyJdfQ==
